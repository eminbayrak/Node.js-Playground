/*
* Each new term in the Fibonacci sequence is generated by adding the 
* previous two terms. By starting with 1 and 2, the first 
* 10 terms will be:
* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
* By considering the terms in the Fibonacci sequence 
* whose values do not exceed four million, find the sum of 
* the even-valued terms.
* If you opt modular approach set the entry point as App.
*/

function solution()
 {
    var fibno = [ 1, 2 ], sum = 0;

 function cal(arr )
  {
   return arr[ arr.length - 1 ] + arr[ arr.length - 2 ];
 }

  while ( fibno[ fibno.length - 1 ] < 4e+6 )
    {
      fibno.push( cal(fibno) );
    }

    fibno.forEach( function(n) 
     {
        if ( n % 2 === 0 )
        {
            sum += n;
        }
    });
    return sum;
}

console.log(solution())